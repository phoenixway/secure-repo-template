#!/bin/bash
set -e

# –í–∏–∑–Ω–∞—á–∞—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é —Å–∫—Ä–∏–ø—Ç–∞ —Ç–∞ –∫–æ—Ä—ñ–Ω—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
REPO_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"

# --- –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–ª—é—á–µ–º ---
# (–í—Å—Ç–∞–≤–ª—è—î–º–æ —Å—é–¥–∏ –ø–æ–≤–Ω–∏–π –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ–π get_decrypted_age_key —Ç–∞ cleanup_temp_key)
# Function to get the path to the decrypted age private key
# It handles GPG decryption to a temporary file if needed.
# Sets DECRYPTED_AGE_KEY_PATH global variable.
# Returns 0 on success, 1 on failure.
# Creates TEMP_KEY_FILE_PATH global variable for cleanup.
get_decrypted_age_key() {
  local master_key_path="$1" # Path from MASTER_AGE_KEY_STORAGE_PATH
  DECRYPTED_AGE_KEY_PATH="" # Reset
  TEMP_KEY_FILE_PATH=""     # Reset

  if [ -z "$master_key_path" ]; then
    echo "[‚ùå] get_decrypted_age_key: –®–ª—è—Ö –¥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–ª—é—á–∞ –Ω–µ –Ω–∞–¥–∞–Ω–æ."
    return 1
  fi

  # –Ø–∫—â–æ master_key_path –≤—ñ–¥–Ω–æ—Å–Ω–∏–π, —Ä–æ–±–∏–º–æ –π–æ–≥–æ –∞–±—Å–æ–ª—é—Ç–Ω–∏–º –≤—ñ–¥–Ω–æ—Å–Ω–æ REPO_DIR
  if [[ "$master_key_path" != /* ]]; then
    master_key_path="$REPO_DIR/$master_key_path"
  fi

  if [ ! -f "$master_key_path" ]; then
    echo "[‚ùå] get_decrypted_age_key: –§–∞–π–ª –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–ª—é—á–∞ '$master_key_path' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."
    return 1
  fi

  # Check if the key is GPG encrypted
  if [[ "$master_key_path" == *.gpg ]]; then
    if ! command -v gpg &> /dev/null; then
      echo "[‚ùå] get_decrypted_age_key: –ö–ª—é—á '$master_key_path' –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ GPG, –∞–ª–µ –∫–æ–º–∞–Ω–¥–∞ 'gpg' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞."
      return 1
    fi
    TEMP_KEY_FILE_PATH="$REPO_DIR/temp_age_key.$RANDOM.$RANDOM.txt"
    echo "[‚ÑπÔ∏è] –ö–ª—é—á '$master_key_path' –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ GPG. –°–ø—Ä–æ–±–∞ —Ä–æ–∑—à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è..."
    echo "    –í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å–Ω—É —Ñ—Ä–∞–∑—É –¥–ª—è GPG, —â–æ–± —Ä–æ–∑—à–∏—Ñ—Ä—É–≤–∞—Ç–∏ '$master_key_path'."
    if gpg --quiet --batch --yes --decrypt -o "$TEMP_KEY_FILE_PATH" "$master_key_path"; then
      DECRYPTED_AGE_KEY_PATH="$TEMP_KEY_FILE_PATH"
      chmod 600 "$DECRYPTED_AGE_KEY_PATH" # Set strict permissions
      echo "[‚úÖ] –ö–ª—é—á —Ç–∏–º—á–∞—Å–æ–≤–æ —Ä–æ–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ –≤ '$DECRYPTED_AGE_KEY_PATH'."
      return 0
    else
      echo "[‚ùå] get_decrypted_age_key: –ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è '$master_key_path' –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é GPG."
      [ -f "$TEMP_KEY_FILE_PATH" ] && rm -f "$TEMP_KEY_FILE_PATH"
      TEMP_KEY_FILE_PATH=""
      return 1
    fi
  else
    DECRYPTED_AGE_KEY_PATH="$master_key_path"
    echo "[‚ÑπÔ∏è] –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –Ω–µ–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–π –∫–ª—é—á: '$DECRYPTED_AGE_KEY_PATH'."
    return 0
  fi
}

# Function to clean up the temporary decrypted key file
cleanup_temp_key() {
  if [ -n "$TEMP_KEY_FILE_PATH" ] && [ -f "$TEMP_KEY_FILE_PATH" ]; then
    echo "[üóëÔ∏è] –ë–µ–∑–ø–µ—á–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ —Ñ–∞–π–ª—É –∫–ª—é—á–∞ '$TEMP_KEY_FILE_PATH'..."
    if shred -u "$TEMP_KEY_FILE_PATH"; then # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ shred –¥–ª—è –±–µ–∑–ø–µ–∫–∏
        echo "[‚úÖ] –¢–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª –∫–ª—é—á–∞ –≤–∏–¥–∞–ª–µ–Ω–æ."
    else
        echo "[‚ö†Ô∏è] –ü–û–ú–ò–õ–ö–ê –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ —Ñ–∞–π–ª—É –∫–ª—é—á–∞ '$TEMP_KEY_FILE_PATH'! –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–¥–∞–ª—ñ—Ç—å –π–æ–≥–æ –≤—Ä—É—á–Ω—É!"
    fi
    TEMP_KEY_FILE_PATH="" # –°–∫–∏–¥–∞—î–º–æ
  fi
}
# --- –ö—ñ–Ω–µ—Ü—å —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–ª—é—á–µ–º ---

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ trap –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ –∫–ª—é—á–∞ –ø—Ä–∏ –≤–∏—Ö–æ–¥—ñ –∞–±–æ –ø–æ–º–∏–ª—Ü—ñ
trap cleanup_temp_key EXIT SIGINT SIGTERM

cd "$REPO_DIR" # –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—å, —â–æ –º–∏ –≤ –∫–æ—Ä–µ–Ω—ñ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é, —è–∫—â–æ —î .env
if [ -f ".env" ]; then
  # source .env # –ù–µ–±–µ–∑–ø–µ—á–Ω–æ, —è–∫—â–æ .env –º—ñ—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥–∏
  # –ß–∏—Ç–∞—î–º–æ –∑–º—ñ–Ω–Ω—ñ –±–µ–∑–ø–µ—á–Ω–æ
  MASTER_AGE_KEY_STORAGE_PATH=$(grep '^MASTER_AGE_KEY_STORAGE_PATH=' .env | cut -d'=' -f2 | sed 's/^"//;s/"$//;s/^'\''//;s/'\''$//')
  EDITOR_FROM_ENV=$(grep '^EDITOR=' .env | cut -d'=' -f2 | sed 's/^"//;s/"$//;s/^'\''//;s/'\''$//')
  # –Ø–∫—â–æ EDITOR –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ .env, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å–∏—Å—Ç–µ–º–Ω–∏–π $EDITOR
  EDITOR="${EDITOR_FROM_ENV:-$EDITOR}"

else
  echo "[‚ùå] –§–∞–π–ª –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó .env –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∫–æ—Ä–µ–Ω—ñ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é ($REPO_DIR)."
  echo "[‚ÑπÔ∏è] –ë—É–¥—å –ª–∞—Å–∫–∞, —Å—Ç–≤–æ—Ä—ñ—Ç—å .env –∑ .env.example —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–π—Ç–µ –π–æ–≥–æ."
  exit 1
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ MASTER_AGE_KEY_STORAGE_PATH
if [ -z "$MASTER_AGE_KEY_STORAGE_PATH" ]; then
  echo "[‚ùå] –ó–º—ñ–Ω–Ω–∞ MASTER_AGE_KEY_STORAGE_PATH –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∞ —É —Ñ–∞–π–ª—ñ .env."
  exit 1
fi

# –û—Ç—Ä–∏–º—É—î–º–æ —à–ª—è—Ö –¥–æ —Ä–æ–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ–≥–æ –∫–ª—é—á–∞ (–º–æ–∂–ª–∏–≤–æ, —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ)
if ! get_decrypted_age_key "$MASTER_AGE_KEY_STORAGE_PATH"; then
  # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –≤–∂–µ –±—É–ª–æ –≤–∏–≤–µ–¥–µ–Ω–æ —Ñ—É–Ω–∫—Ü—ñ—î—é
  exit 1
fi
# –¢–µ–ø–µ—Ä –∑–º—ñ–Ω–Ω–∞ DECRYPTED_AGE_KEY_PATH –º—ñ—Å—Ç–∏—Ç—å —à–ª—è—Ö –¥–æ –∫–ª—é—á–∞, —è–∫–∏–π –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∑ age

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ fzf
if ! command -v fzf &> /dev/null; then
    echo "[‚ùå] –ö–æ–º–∞–Ω–¥—É fzf –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å fzf."
    echo "[üí°] –í–∏ –º–æ–∂–µ—Ç–µ —Ä–æ–∑—à–∏—Ñ—Ä—É–≤–∞—Ç–∏ —Ñ–∞–π–ª–∏ –≤—Ä—É—á–Ω—É –∫–æ–º–∞–Ω–¥–æ—é: age -d -i '$DECRYPTED_AGE_KEY_PATH' -o <–≤–∏—Ö—ñ–¥–Ω–∏–π_—Ñ–∞–π–ª.md> <–≤—Ö—ñ–¥–Ω–∏–π_—Ñ–∞–π–ª.md.age>"
    exit 1
fi

echo "[üîé] –ü–æ—à—É–∫ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ (*.md.age)..."
mapfile -t FILES_TO_DECRYPT < <(find . -maxdepth 1 -type f -name "*.md.age" -print0 | fzf --read0 -m --prompt="–í–∏–±–µ—Ä—ñ—Ç—å —Ñ–∞–π–ª–∏ –¥–ª—è —Ä–æ–∑—à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è (Tab –¥–ª—è –≤–∏–±–æ—Ä—É –∫—ñ–ª—å–∫–æ—Ö, Enter –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è):" --preview "age -d -i '$DECRYPTED_AGE_KEY_PATH' -o /dev/stdout {} 2>/dev/null | head -n 20")

if [ ${#FILES_TO_DECRYPT[@]} -eq 0 ]; then
  echo "[‚ÑπÔ∏è] –§–∞–π–ª–∏ –Ω–µ –≤–∏–±—Ä–∞–Ω–æ. –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è."
  exit 0 # –í–∏—Ö—ñ–¥ –±–µ–∑ –ø–æ–º–∏–ª–∫–∏, cleanup_temp_key –≤–∏–∫–æ–Ω–∞—î—Ç—å—Å—è —á–µ—Ä–µ–∑ trap
fi

echo "[‚è≥] –†–æ–∑—à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è –≤–∏–±—Ä–∞–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤..."
SUCCESS_COUNT=0
FAIL_COUNT=0
DECRYPTED_FILES_LIST=()

for ENCRYPTED_FILE_PATH_RAW in "${FILES_TO_DECRYPT[@]}"; do
  # –û–±—Ä–æ–±–∫–∞ —à–ª—è—Ö—É, —è–∫—â–æ find –ø–æ–≤–µ—Ä—Ç–∞—î ./file.md.age
  ENCRYPTED_FILE_PATH="${ENCRYPTED_FILE_PATH_RAW#./}"
  ENCRYPTED_FILE_BASENAME=$(basename "$ENCRYPTED_FILE_PATH")
  DECRYPTED_FILE_BASENAME="${ENCRYPTED_FILE_BASENAME%.age}"

  if [ -f "$DECRYPTED_FILE_BASENAME" ]; then
    read -r -p "[‚ö†Ô∏è] –§–∞–π–ª '$DECRYPTED_FILE_BASENAME' –≤–∂–µ —ñ—Å–Ω—É—î. –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç–∏? (y/N): " choice
    case "$choice" in
      y|Y ) echo "[‚ÑπÔ∏è] –ü–µ—Ä–µ–∑–∞–ø–∏—Å—É—é $DECRYPTED_FILE_BASENAME...";;
      * ) echo "[‚ÑπÔ∏è] –ü—Ä–æ–ø—É—Å–∫–∞—é —Ä–æ–∑—à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è $ENCRYPTED_FILE_BASENAME."; continue;;
    esac
  fi

  echo "[üîë] –†–æ–∑—à–∏—Ñ—Ä–æ–≤—É—é $ENCRYPTED_FILE_BASENAME ‚Üí $DECRYPTED_FILE_BASENAME"
  if age -d -i "$DECRYPTED_AGE_KEY_PATH" -o "$DECRYPTED_FILE_BASENAME" "$ENCRYPTED_FILE_PATH"; then
    echo "[‚úÖ] –§–∞–π–ª $DECRYPTED_FILE_BASENAME —É—Å–ø—ñ—à–Ω–æ —Ä–æ–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ."
    DECRYPTED_FILES_LIST+=("$DECRYPTED_FILE_BASENAME")
    ((SUCCESS_COUNT++))
  else
    echo "[‚ùå] –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ä–æ–∑—à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è $ENCRYPTED_FILE_BASENAME."
    [ -f "$DECRYPTED_FILE_BASENAME" ] && rm -f "$DECRYPTED_FILE_BASENAME"
    ((FAIL_COUNT++))
  fi
done

echo ""
echo "[üìä] –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–∑—à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è:"
echo "    –£—Å–ø—ñ—à–Ω–æ: $SUCCESS_COUNT"
echo "    –ó –ø–æ–º–∏–ª–∫–∞–º–∏: $FAIL_COUNT"

if [ ${#DECRYPTED_FILES_LIST[@]} -gt 0 ]; then
  echo ""
  echo "[‚ùó] –í–ê–ñ–õ–ò–í–û: –ù–∞—Å—Ç—É–ø–Ω—ñ —Ñ–∞–π–ª–∏ –±—É–ª–æ —Ä–æ–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ —ñ –≤–æ–Ω–∏ –∑–∞—Ä–∞–∑ –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –Ω–∞ –¥–∏—Å–∫—É —É –≤—ñ–¥–∫—Ä–∏—Ç–æ–º—É –≤–∏–≥–ª—è–¥—ñ:"
  for df in "${DECRYPTED_FILES_LIST[@]}"; do
    echo "    - $df"
  done
  echo "[üîí] –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞—à–∏—Ñ—Ä—É–≤–∞—Ç–∏ —ó—Ö –Ω–∞–∑–∞–¥ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é 'scripts/encrypt-n-store.sh' –∞–±–æ 'scripts/encrypt-unencrypted.sh'!"
  echo "     –†–æ–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω—ñ —Ñ–∞–π–ª–∏ –¥–æ–¥–∞–Ω–æ –¥–æ .gitignore, –∞–ª–µ —ó—Ö —Å–ª—ñ–¥ –≤–∏–¥–∞–ª–∏—Ç–∏/–∑–∞—à–∏—Ñ—Ä—É–≤–∞—Ç–∏ —è–∫–æ–º–æ–≥–∞ —à–≤–∏–¥—à–µ."

  if [ -n "$EDITOR" ] && [ ${#DECRYPTED_FILES_LIST[@]} -le 5 ]; then # –¢—Ä–æ—Ö–∏ –∑–±—ñ–ª—å—à–∏–≤ –ª—ñ–º—ñ—Ç
    read -r -p "[‚ùì] –í—ñ–¥–∫—Ä–∏—Ç–∏ —Ä–æ–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω—ñ —Ñ–∞–π–ª–∏ –≤ '$EDITOR'? (y/N): " open_choice
    case "$open_choice" in
      y|Y ) $EDITOR "${DECRYPTED_FILES_LIST[@]}";;
      * ) ;;
    esac
  elif [ -n "$EDITOR" ]; then
    echo "[‚ÑπÔ∏è] –ó–∞–±–∞–≥–∞—Ç–æ —Ñ–∞–π–ª—ñ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è. –í—ñ–¥–∫—Ä–∏–π—Ç–µ —ó—Ö –≤—Ä—É—á–Ω—É: ${DECRYPTED_FILES_LIST[*]}"
  fi
fi

# cleanup_temp_key –±—É–¥–µ –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —á–µ—Ä–µ–∑ trap EXIT
echo "[üö™] –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ decrypt-n-work.sh."