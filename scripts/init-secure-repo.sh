#!/bin/bash
set -e

# –í–∏–∑–Ω–∞—á–∞—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é, –¥–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —Å–∞–º init-secure-repo.sh (–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è —à–∞–±–ª–æ–Ω—É)
TEMPLATE_SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
TEMPLATE_ROOT_DIR="$(cd "$TEMPLATE_SCRIPT_DIR/.." && pwd)"

TARGET_REPO_NAME="$1"
if [ -z "$TARGET_REPO_NAME" ]; then
  echo "üîß –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: $0 <–Ω–∞–∑–≤–∞_–Ω–æ–≤–æ–≥–æ_—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é>"
  echo "–ù–∞–ø—Ä–∏–∫–ª–∞–¥: $0 my-secret-notes"
  exit 1
fi

if [ -d "$TARGET_REPO_NAME" ]; then
  echo "[‚ùå] –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è '$TARGET_REPO_NAME' –≤–∂–µ —ñ—Å–Ω—É—î."
  exit 1
fi

echo "[‚öôÔ∏è] –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é '$TARGET_REPO_NAME'..."
mkdir -p "$TARGET_REPO_NAME/scripts" "$TARGET_REPO_NAME/personal-scripts" "$TARGET_REPO_NAME/backup"
cd "$TARGET_REPO_NAME"
TARGET_REPO_ABS_PATH=$(pwd)

echo "[üìù] –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é..."
git init -b main

echo "[üìÑ] –°—Ç–≤–æ—Ä–µ–Ω–Ω—è README.md..."
cat > README.md <<EOF
# $TARGET_REPO_NAME

–¶–µ–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π –∑–±–µ—Ä—ñ–≥–∞—î –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ñ —á—É—Ç–ª–∏–≤—ñ –¥–∞–Ω—ñ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —à–∞–±–ª–æ–Ω secure-repo-template.
EOF

echo "[üôà] –°—Ç–≤–æ—Ä–µ–Ω–Ω—è .gitignore..."
if [ -f "$TEMPLATE_ROOT_DIR/.gitignore" ]; then
  cp "$TEMPLATE_ROOT_DIR/.gitignore" .
else
  echo "[‚ö†Ô∏è] –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ .gitignore –≤ —à–∞–±–ª–æ–Ω—ñ. –°—Ç–≤–æ—Ä—é—é –±–∞–∑–æ–≤–∏–π."
  cat > .gitignore <<EOF
# –†–æ–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω—ñ —Ñ–∞–π–ª–∏ Markdown (–∫—Ä—ñ–º README.md)
*.md
!README.md

# –ü—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á age - –ù–Ü–ö–û–õ–ò –ù–ï –ö–û–ú–Ü–¢–ò–¢–ò –ü–†–Ø–ú–û!
# –ó–∞–º—ñ—Å—Ç—å —Ü—å–æ–≥–æ, –≤—ñ–Ω –º–∞—î –±—É—Ç–∏ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–π (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, age-key.txt.gpg)
# —ñ —à–ª—è—Ö –¥–æ –Ω—å–æ–≥–æ –≤–∫–∞–∑–∞–Ω–∏–π –≤ .env (MASTER_AGE_KEY_STORAGE_PATH)
# –°–∞–º age-key.txt (–Ω–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–π) –º–∞—î –±—É—Ç–∏ –¥–æ–¥–∞–Ω–∏–π –≤ .gitignore, —è–∫—â–æ –≤—ñ–Ω —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –ª–æ–∫–∞–ª—å–Ω–æ
age-key.txt

# –§–∞–π–ª –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ - –ù–Ü–ö–û–õ–ò –ù–ï –ö–û–ú–Ü–¢–ò–¢–ò!
.env
.env.*
!.env.example

# –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –¥–ª—è –±–µ–∫–∞–ø—ñ–≤ (–ª–æ–∫–∞–ª—å–Ω–∏—Ö –∞—Ä—Ö—ñ–≤—ñ–≤)
backup/

# –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö —Å–∫—Ä–∏–ø—Ç—ñ–≤
personal-scripts/

# –¢–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è
tmp-restore-*/
tmp-restore*/
EOF
fi

echo "[üîë] –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –Ω–æ–≤–æ–≥–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ age..."
# –ì–µ–Ω–µ—Ä—É—î–º–æ –∫–ª—é—á –≤ –ø–æ—Ç–æ—á–Ω—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó (–∫–æ—Ä—ñ–Ω—å –Ω–æ–≤–æ–≥–æ —Ä–µ–ø–æ)
# –í—ñ–Ω –±—É–¥–µ –Ω–∞–∑–∏–≤–∞—Ç–∏—Å—è age-key.txt
age-keygen -o "age-key.txt"
LOCAL_PLAIN_AGE_KEY_FILE="age-key.txt"
MASTER_KEY_PATH_FOR_ENV="$LOCAL_PLAIN_AGE_KEY_FILE" # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º, —è–∫—â–æ –Ω–µ —à–∏—Ñ—Ä—É—î–º–æ GPG

echo ""
echo "[üõ°Ô∏è] –ó–∞—Ö–∏—Å—Ç –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ (—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ GPG —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è):"
echo "    –í–∞—à –Ω–æ–≤–∏–π –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É —Ñ–∞–π–ª—ñ: $TARGET_REPO_ABS_PATH/$LOCAL_PLAIN_AGE_KEY_FILE"
echo "    –í–ê–ñ–õ–ò–í–û: –¶–µ–π —Ñ–∞–π–ª –º—ñ—Å—Ç–∏—Ç—å –≤–∞—à —Å–µ–∫—Ä–µ—Ç–Ω–∏–π –∫–ª—é—á! –ô–æ–≥–æ —Å–ª—ñ–¥ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±–µ–∑–ø–µ—á–Ω–æ."
echo "    –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –∑–∞—à–∏—Ñ—Ä—É–≤–∞—Ç–∏ –π–æ–≥–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é GPG."

GPG_ENCRYPTED_KEY_FILE="${LOCAL_PLAIN_AGE_KEY_FILE}.gpg"
GPG_ENCRYPTION_SUCCESSFUL=false

if command -v gpg &> /dev/null; then
  read -r -p "    [‚ùì] –ë–∞–∂–∞—î—Ç–µ –∑–∞—à–∏—Ñ—Ä—É–≤–∞—Ç–∏ '$LOCAL_PLAIN_AGE_KEY_FILE' –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é GPG –∑–∞—Ä–∞–∑? (Y/n): " choice
  case "$choice" in
    n|N ) echo "    [‚ÑπÔ∏è] –ü—Ä–æ–ø—É—Å–∫–∞—é GPG —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –≤–∏ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ –∑–∞—Ö–∏—Å—Ç–∏–ª–∏ '$LOCAL_PLAIN_AGE_KEY_FILE'.";;
    * )
      echo "    [üîê] –®–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è '$LOCAL_PLAIN_AGE_KEY_FILE' -> '$GPG_ENCRYPTED_KEY_FILE'..."
      echo "        –í–≤–µ–¥—ñ—Ç—å –Ω–∞–¥—ñ–π–Ω—É –ø–∞—Ä–æ–ª—å–Ω—É —Ñ—Ä–∞–∑—É –¥–ª—è GPG —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è."
      if gpg --quiet --batch --yes --symmetric --cipher-algo AES256 -o "$GPG_ENCRYPTED_KEY_FILE" "$LOCAL_PLAIN_AGE_KEY_FILE"; then
        echo "    [‚úÖ] –§–∞–π–ª '$LOCAL_PLAIN_AGE_KEY_FILE' —É—Å–ø—ñ—à–Ω–æ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ —è–∫ '$GPG_ENCRYPTED_KEY_FILE'."
        echo "        –û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –Ω–µ–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–π —Ñ–∞–π–ª '$LOCAL_PLAIN_AGE_KEY_FILE' –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ."
        if shred -u "$LOCAL_PLAIN_AGE_KEY_FILE"; then
          echo "    [üóëÔ∏è] –û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ñ–∞–π–ª '$LOCAL_PLAIN_AGE_KEY_FILE' –±–µ–∑–ø–µ—á–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ."
        else
          echo "    [‚ö†Ô∏è] –ü–û–ú–ò–õ–ö–ê –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è '$LOCAL_PLAIN_AGE_KEY_FILE'! –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–¥–∞–ª—ñ—Ç—å –π–æ–≥–æ –≤—Ä—É—á–Ω—É!"
        fi
        MASTER_KEY_PATH_FOR_ENV="$GPG_ENCRYPTED_KEY_FILE"
        GPG_ENCRYPTION_SUCCESSFUL=true
      else
        echo "    [‚ùå] –ü–æ–º–∏–ª–∫–∞ GPG —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è. –ù–µ–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–π –∫–ª—é—á '$LOCAL_PLAIN_AGE_KEY_FILE' –∑–∞–ª–∏—à–µ–Ω–æ."
        echo "        –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è GPG –∞–±–æ —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
      fi
      ;;
  esac
else
  echo "    [‚ÑπÔ∏è] GPG –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –®–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è –∫–ª—é—á–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é GPG –ø—Ä–æ–ø—É—â–µ–Ω–æ."
  echo "        –ù–∞—Å—Ç—ñ–π–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ GPG —Ç–∞ –∑–∞—à–∏—Ñ—Ä—É–≤–∞—Ç–∏ '$LOCAL_PLAIN_AGE_KEY_FILE' –≤—Ä—É—á–Ω—É:"
  echo "        gpg --symmetric --cipher-algo AES256 -o ${GPG_ENCRYPTED_KEY_FILE} ${LOCAL_PLAIN_AGE_KEY_FILE}"
  echo "        –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –±–µ–∑–ø–µ—á–Ω–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π ${LOCAL_PLAIN_AGE_KEY_FILE} (shred -u ${LOCAL_PLAIN_AGE_KEY_FILE})"
fi

echo ""
echo "[üîë] –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—É–±–ª—ñ—á–Ω–æ–≥–æ –∫–ª—é—á–∞ age..."
# –û—Ç—Ä–∏–º—É—î–º–æ –ø—É–±–ª—ñ—á–Ω–∏–π –∫–ª—é—á –∑ —Ç–æ–≥–æ —Ñ–∞–π–ª—É, —è–∫–∏–π —î –∞–∫—Ç—É–∞–ª—å–Ω–∏–º (–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–π –∞–±–æ –Ω—ñ)
# –Ø–∫—â–æ GPG —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è –±—É–ª–æ —É—Å–ø—ñ—à–Ω–∏–º, MASTER_KEY_PATH_FOR_ENV –≤–∫–∞–∑—É—î –Ω–∞ .gpg —Ñ–∞–π–ª
AGE_PUBLIC_KEY=""
KEY_SOURCE_FOR_PUBLIC_KEY="$MASTER_KEY_PATH_FOR_ENV" # –ê–±–æ, —è–∫—â–æ GPG, —Ç–æ –∑ —Ä–æ–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ–≥–æ –ø–æ—Ç–æ–∫—É

if $GPG_ENCRYPTION_SUCCESSFUL; then
    echo "    (–û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—É–±–ª—ñ—á–Ω–æ–≥–æ –∫–ª—é—á–∞ –∑ —Ç–∏–º—á–∞—Å–æ–≤–æ —Ä–æ–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ–≥–æ GPG-—Ñ–∞–π–ª–∞)"
    # –ü–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–ø–∏—Ç–∞—Ç–∏ –ø–∞—Ä–æ–ª—å –∑–Ω–æ–≤—É, –∞–±–æ —Ç–∏–º—á–∞—Å–æ–≤–æ —Ä–æ–∑—à–∏—Ñ—Ä—É–≤–∞—Ç–∏
    # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó, —è–∫—â–æ –∫–ª—é—á –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ, –ø–æ–ø—Ä–æ—Å–∏–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–≤–µ—Å—Ç–∏ –π–æ–≥–æ –≤—Ä—É—á–Ω—É
    # –∞–±–æ –Ω–∞–¥–∞–º–æ –∫–æ–º–∞–Ω–¥—É. –Ü–Ω–∞–∫—à–µ —Ü–µ —É—Å–∫–ª–∞–¥–Ω–∏—Ç—å init —Å–∫—Ä–∏–ø—Ç.
    # –ö—Ä–∞—â–µ: —è–∫—â–æ GPG –±—É–ª–æ —â–æ–π–Ω–æ –∑—Ä–æ–±–ª–µ–Ω–æ, gpg –º–æ–∂–µ –≤—Å–µ —â–µ –º–∞—Ç–∏ –∫–ª—é—á —Å–µ—Å—ñ—ó, —Å–ø—Ä–æ–±—É—î–º–æ:
    if ! AGE_PUBLIC_KEY=$(gpg --quiet --batch --yes --decrypt "$MASTER_KEY_PATH_FOR_ENV" 2>/dev/null | age-keygen -y - 2>/dev/null); then
        echo "    [‚ö†Ô∏è] –ù–µ –≤–¥–∞–ª–æ—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—É–±–ª—ñ—á–Ω–∏–π –∫–ª—é—á –∑ '$MASTER_KEY_PATH_FOR_ENV'."
        echo "        –Ø–∫—â–æ —Ñ–∞–π–ª –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ GPG, —Ü–µ –º–æ–≥–ª–æ —Å—Ç–∞—Ç–∏—Å—è —á–µ—Ä–µ–∑ –∫–µ—à—É–≤–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è GPG."
    fi
else # –ö–ª—é—á –Ω–µ —à–∏—Ñ—Ä—É–≤–∞–≤—Å—è GPG –∞–±–æ —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è –Ω–µ –≤–¥–∞–ª–æ—Å—è, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ plain —Ñ–∞–π–ª
    if [ -f "$LOCAL_PLAIN_AGE_KEY_FILE" ]; then # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤—ñ–Ω —â–µ —ñ—Å–Ω—É—î
        AGE_PUBLIC_KEY=$(age-keygen -y "$LOCAL_PLAIN_AGE_KEY_FILE")
    fi
fi

if [ -z "$AGE_PUBLIC_KEY" ]; then
    echo "    [‚ùå] –ù–ï –í–î–ê–õ–û–°–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ù–û –û–¢–†–ò–ú–ê–¢–ò –ü–£–ë–õ–Ü–ß–ù–ò–ô –ö–õ–Æ–ß AGE."
    echo "    –ë—É–¥—å –ª–∞—Å–∫–∞, –æ—Ç—Ä–∏–º–∞–π—Ç–µ –π–æ–≥–æ –≤—Ä—É—á–Ω—É —Ç–∞ –≤—Å—Ç–∞–≤—Ç–µ –≤ .env —Ñ–∞–π–ª —É –∑–º—ñ–Ω–Ω—É AGE_RECIPIENT."
    echo "    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è (—è–∫—â–æ –∫–ª—é—á –≤ $LOCAL_PLAIN_AGE_KEY_FILE): age-keygen -y $LOCAL_PLAIN_AGE_KEY_FILE"
    echo "    –ö–æ–º–∞–Ω–¥–∞ (—è–∫—â–æ –∫–ª—é—á –≤ $GPG_ENCRYPTED_KEY_FILE): gpg -d $GPG_ENCRYPTED_KEY_FILE | age-keygen -y -"
fi

echo "[‚ÑπÔ∏è] –í–∞—à –ø—É–±–ª—ñ—á–Ω–∏–π –∫–ª—é—á (recipient): $AGE_PUBLIC_KEY"
echo "    (–ô–æ–≥–æ –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –¥–æ–¥–∞–Ω–æ –¥–æ .env, —è–∫—â–æ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏)"


echo "[‚öôÔ∏è] –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ–∞–π–ª—É .env –∑ .env.example..."
ENV_EXAMPLE_PATH="$TEMPLATE_ROOT_DIR/.env.example"
if [ ! -f "$ENV_EXAMPLE_PATH" ]; then
    echo "[‚ùå] –§–∞—Ç–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞: —Ñ–∞–π–ª —à–∞–±–ª–æ–Ω—É .env.example –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ '$ENV_EXAMPLE_PATH'."
    exit 1
fi
cp "$ENV_EXAMPLE_PATH" .env

# –û–Ω–æ–≤–ª—é—î–º–æ .env: MASTER_AGE_KEY_STORAGE_PATH —Ç–∞ AGE_RECIPIENT
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ sed. –î–ª—è –∫—Ä–æ—Å-–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ—Å—Ç—ñ –∑ macOS/BSD sed -i ''
# –û—Å–∫—ñ–ª—å–∫–∏ –º–∏ –≤ Linux —Å–µ—Ä–µ–¥–æ–≤–∏—â—ñ (—Å—É–¥—è—á–∏ –∑ —à–ª—è—Ö—ñ–≤), –ø—Ä–æ—Å—Ç–∏–π sed -i –ø—ñ–¥—ñ–π–¥–µ.
# –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –∫—Ä–æ—Å-–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ñ—Å—Ç—å, –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ awk –∞–±–æ perl.

# –ó–∞–º—ñ–Ω—é—î–º–æ MASTER_AGE_KEY_STORAGE_PATH
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ # —è–∫ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫ –≤ sed, –±–æ —à–ª—è—Ö–∏ –º–æ–∂—É—Ç—å –º—ñ—Å—Ç–∏—Ç–∏ /
ESCAPED_MASTER_KEY_PATH_FOR_ENV=$(printf '%s\n' "$MASTER_KEY_PATH_FOR_ENV" | sed 's/[\&/]/\\&/g') # –ï–∫—Ä–∞–Ω—É—î–º–æ / —Ç–∞ &
sed -i "s#^MASTER_AGE_KEY_STORAGE_PATH=.*#MASTER_AGE_KEY_STORAGE_PATH=\"$ESCAPED_MASTER_KEY_PATH_FOR_ENV\"#" .env

# –ó–∞–º—ñ–Ω—é—î–º–æ AGE_RECIPIENT
if [ -n "$AGE_PUBLIC_KEY" ]; then
  ESCAPED_AGE_PUBLIC_KEY=$(printf '%s\n' "$AGE_PUBLIC_KEY" | sed 's/[\&/]/\\&/g')
  sed -i "s#^AGE_RECIPIENT=.*#AGE_RECIPIENT=\"$ESCAPED_AGE_PUBLIC_KEY\"#" .env
else
  echo "[‚ö†Ô∏è] –ü—É–±–ª—ñ—á–Ω–∏–π –∫–ª—é—á AGE_RECIPIENT –Ω–µ –±—É–ª–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ .env. –ë—É–¥—å –ª–∞—Å–∫–∞, –¥–æ–¥–∞–π—Ç–µ –π–æ–≥–æ –≤—Ä—É—á–Ω—É."
fi

echo "[‚ÑπÔ∏è] –§–∞–π–ª .env —Å—Ç–≤–æ—Ä–µ–Ω–æ —Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ."
echo "    –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ .env —Ç–∞ –∑–∞–ø–æ–≤–Ω—ñ—Ç—å CLOUD_REMOTES, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ."

echo "[üìú] –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç—ñ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó..."
SCRIPTS_TO_COPY=(
  "decrypt-n-work.sh"
  "encrypt-n-store.sh"
  "encrypt-unencrypted.sh"
  "push-to-clouds.sh"
  "restore-from-cloud.sh"
)
# –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–∏–π backup-to-cloud.sh, —è–∫—â–æ –≤—ñ–Ω –±—É–≤ —É —à–∞–±–ª–æ–Ω—ñ
# rm -f "$TEMPLATE_SCRIPT_DIR/backup-to-cloud.sh" # –Ø–∫—â–æ –≤—ñ–Ω —Ç–∞–º —î —ñ –π–æ–≥–æ —Ç—Ä–µ–±–∞ –ø—Ä–∏–±—Ä–∞—Ç–∏ –∑ —Å–∞–º–æ–≥–æ —à–∞–±–ª–æ–Ω—É

for script_name in "${SCRIPTS_TO_COPY[@]}"; do
  if [ -f "$TEMPLATE_SCRIPT_DIR/$script_name" ]; then
    cp "$TEMPLATE_SCRIPT_DIR/$script_name" "scripts/"
    chmod +x "scripts/$script_name"
  else
    echo "[‚ö†Ô∏è] –£–≤–∞–≥–∞: –°–∫—Ä–∏–ø—Ç '$script_name' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ '$TEMPLATE_SCRIPT_DIR'."
  fi
done

echo ""
echo "[üéâ] –ì–æ—Ç–æ–≤–æ! –°—Ç–≤–æ—Ä–µ–Ω–æ —É–∫—Ä—ñ–ø–ª–µ–Ω–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π '$TARGET_REPO_NAME' –≤ $TARGET_REPO_ABS_PATH"
echo ""
echo "–í–∞–∂–ª–∏–≤—ñ –Ω–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:"
echo "1.  –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –≤–∏ –Ω–∞–¥—ñ–π–Ω–æ –∑–±–µ—Ä–µ–≥–ª–∏ –ø–∞—Ä–æ–ª—å–Ω—É —Ñ—Ä–∞–∑—É –¥–ª—è GPG (—è–∫—â–æ –≤–∏ —à–∏—Ñ—Ä—É–≤–∞–ª–∏ –∫–ª—é—á)."
echo "2.  –Ø–∫—â–æ –≤–∏ –ù–ï —à–∏—Ñ—Ä—É–≤–∞–ª–∏ –∫–ª—é—á '$LOCAL_PLAIN_AGE_KEY_FILE' –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é GPG, –∑—Ä–æ–±—ñ—Ç—å —Ü–µ –∑–∞—Ä–∞–∑ –≤—Ä—É—á–Ω—É –∞–±–æ –ø–µ—Ä–µ–º—ñ—Å—Ç—ñ—Ç—å –π–æ–≥–æ –≤ –î–£–ñ–ï –±–µ–∑–ø–µ—á–Ω–µ –º—ñ—Å—Ü–µ."
echo "    –®–ª—è—Ö –¥–æ –≤–∞—à–æ–≥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ (–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ–≥–æ —á–∏ –Ω—ñ) –º–∞—î –±—É—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∫–∞–∑–∞–Ω–∏–π —É —Ñ–∞–π–ª—ñ .env –≤ –∑–º—ñ–Ω–Ω—ñ–π MASTER_AGE_KEY_STORAGE_PATH."
echo "    –ü–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ .env: MASTER_AGE_KEY_STORAGE_PATH=\"$MASTER_KEY_PATH_FOR_ENV\""
echo "3.  –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ñ–∞–π–ª .env:"
echo "    - –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ AGE_RECIPIENT –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ (–≤–∞—à –ø—É–±–ª—ñ—á–Ω–∏–π –∫–ª—é—á)."
echo "    - –ó–∞–ø–æ–≤–Ω—ñ—Ç—å CLOUD_REMOTES, —è–∫—â–æ –ø–ª–∞–Ω—É—î—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ö–º–∞—Ä–Ω—ñ –±–µ–∫–∞–ø–∏."
echo "4.  –ó—Ä–æ–±—ñ—Ç—å –ø–µ—Ä—à–∏–π –∫–æ–º—ñ—Ç: "
echo "    git add .gitignore README.md .env.example scripts/"
echo "    # –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞–≤–∞—Ç–∏ .env (—è–∫—â–æ –≤–∏ –π–æ–≥–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–ª–∏ —ñ —Ö–æ—á–µ—Ç–µ –π–æ–≥–æ –≤–µ—Ä—Å—ñ–æ–Ω—É–≤–∞—Ç–∏ –õ–û–ö–ê–õ–¨–ù–û - –Ω–µ –¥–ª—è push!)"
echo "    # –ê–ë–û –ö–†–ê–©–ï: git add . (—è–∫—â–æ .gitignore –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π –ø—Ä–∞–≤–∏–ª—å–Ω–æ —ñ –Ω–µ –∑–∞–∫–æ–º–º—ñ—Ç–∏—Ç—å —Å–µ–∫—Ä–µ—Ç–∏)"
echo "    git commit -m \"Initial setup of secure repository $TARGET_REPO_NAME\""
echo "5.  (–û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ) –ü—ñ–¥–∫–ª—é—á—ñ—Ç—å –¥–æ –≤—ñ–¥–¥–∞–ª–µ–Ω–æ–≥–æ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é —Ç–∞ –∑—Ä–æ–±—ñ—Ç—å push."
echo "    –ü—Ä–∏–∫–ª–∞–¥ –¥–ª—è GitHub (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ GitHub CLI):"
echo "    gh repo create $TARGET_REPO_NAME --private --source=. --remote=origin --push"
echo ""
echo "–ë–µ–∑–ø–µ–∫–∞ –≤–∞—à–æ–≥–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ - –≤–∞—à–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å!"
